name: Continuous Integration

on: pull_request

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup ruby
        uses: ruby/setup-ruby@v1

      - name: Install required apt packages
        run: sudo apt-get -y install libpq-dev

      - name: Caching Ruby gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: bundle-use-ruby-${{ runner.os }}-${{ hashFiles('.ruby-version') }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            bundle-use-ruby-${{ runner.os }}-${{ hashFiles('.ruby-version') }}-

      - name: Install required Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Setup cache key and directory for node_modules cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Bundler
        run: gem install bundler

      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Yarn install
        run: yarn --frozen-lockfile

      - name: Install library for postgres
        run: sudo apt-get install libpq-dev

      - name: Setup DB
        env:
          RAILS_ENV: test
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_PORT: 5432
        run: |
          bundle exec rails db:create
          bundle exec rails db:migrate

      - name: Run RSpec
        env:
          RAILS_ENV: test
        run: bundle exec rspec
